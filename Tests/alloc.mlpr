let fun append (x, y) =
	case x of
            [] => y
	  | h :: t => append (t, h :: y)

    fun copy l = append (l, [])

    fun grow (n, l) =
	if n <= 0 then l
	else let val l' = copy l
	     in grow (n-1, append (l', l'))
	     end

    fun keep_copying l =
	(String.output "*"; keep_copying (copy l))

    fun ignore _ = ()

    fun grow1 n = grow (n, [1])

    fun loop l =
	case l of
            [] => 0
	  | h :: t => (String.output h;
                       String.output "...\n";
                       ignore (keep_copying (grow1 (String.toInt h)));
                       loop t)
in loop String.cmdline_args
end
