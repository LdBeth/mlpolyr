let fun cvt_num_neg_m cvt pos =
	cases `Num i => if pos then `Num i else `Neg (`Num i)
            | `Neg e => cvt (e, not pos)

    fun cvt_num_neg (e, pos) =
	match e with cvt_num_neg_m cvt_num_neg pos

    fun cvt_num_neg_plus_m cvt pos =
	cases `Plus (x, y) => `Plus (cvt (x, pos), cvt (y, pos))
        default: cvt_num_neg_m cvt pos

    fun cvt_num_neg_plus (e, pos) =
	match e with cvt_num_neg_plus_m cvt_num_neg_plus pos
in 0
end
