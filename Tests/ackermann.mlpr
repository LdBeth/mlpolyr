let fun ack (m, n) =
	if m == 0 then n + 1
	(* else if m == 1 then n + 2 *)
	else if n == 0 then ack (m - 1, 1)
	else ack (m - 1, ack (m, n - 1))

    fun loop l =
	case l of
	    [] => 0
	  | h :: t =>
	    (String.output (String.concat
				["ack(3,", h, ")=",
				 String.fromInt (ack (3, String.toInt h)),
				 "\n"]);
	     loop t)

in loop String.cmdline_args
end
